{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Group C Project",
  "language": "en",
  "home_page_url": "https://example.com/",
  "feed_url": "https://example.com/feed/feed.json",
  "description": "Documentation on the word guessing game project.",
  "author": {
    "name": "Your Name Here",
    "url": "https://example.com/about-me/"
  },
  "items": [{
      "id": "https://example.com/word-guess-game-doc/posts/week2/",
      "url": "https://example.com/word-guess-game-doc/posts/week2/",
      "title": "Check-in week 2",
      "content_html": "<p>Project update for week 2 found below.</p>\n<h2 id=\"frontend\" tabindex=\"-1\">Frontend <a class=\"direct-link\" href=\"https://example.com/word-guess-game-doc/posts/week2/#frontend\" aria-hidden=\"true\">#</a></h2>\n<h2 id=\"backend\" tabindex=\"-1\">Backend <a class=\"direct-link\" href=\"https://example.com/word-guess-game-doc/posts/week2/#backend\" aria-hidden=\"true\">#</a></h2>\n<h2 id=\"api\" tabindex=\"-1\">API <a class=\"direct-link\" href=\"https://example.com/word-guess-game-doc/posts/week2/#api\" aria-hidden=\"true\">#</a></h2>\n<p><strong>Retrieve word of the day - User Flow Diagram</strong><br />\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ncee6258qmk12x6y00kg.png\" alt=\"date userflow\" /></p>\n<p><strong>Check word guesses - User Flow Diagram</strong><br />\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv87d50x80k0iblqbr67.png\" alt=\"guess userflow\" /></p>\n<p><strong>Data Structures</strong><br />\ngetWord</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br />  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span><br />  <span class=\"token property\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token property\">\"date\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"03/27/2022\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"wordSize\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"wordOfDay\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Arise\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"numAttempts\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"numCorrect\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">}</span></code></pre>\n<p>For this structure, we are assuming the automatic response will be the current date. For a randomized word from the past, the request should include the desired date, for example <code>/api/getWord?date=01/01/2020</code>.</p>\n<p>checkGuess</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br />  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span><br />  <span class=\"token property\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token property\">\"date\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"03/27/2022\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"guessOne\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"guessTwo\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"grey\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"guessThree\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"grey\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"guessFour\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"grey\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"guessFive\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">}</span></code></pre>\n<p>For this structure, we are assuming the game will send each letter individually, for example <code>/api/checkGuess?letterOne=a&amp;letterTwo=w</code> etc.</p>\n",
      "date_published": "2022-03-27T00:00:00Z"
    },{
      "id": "https://example.com/word-guess-game-doc/posts/wee1/",
      "url": "https://example.com/word-guess-game-doc/posts/wee1/",
      "title": "Check-in week 1",
      "content_html": "<h2 id=\"background\" tabindex=\"-1\">Background <a class=\"direct-link\" href=\"https://example.com/word-guess-game-doc/posts/wee1/#background\" aria-hidden=\"true\">#</a></h2>\n<p>For our final Project in IST402, our team decided to create a word-guessing-game. This would be a web-based word game allowing users to guess a random five-letter word. Each user would be given 5-6 attempts to guess the word. For each guess, a letter is marked as either green, yellow, or gray: Green indicates that the letter is correct, and yellow indicates that it is in the answer but not in the correct position. In contrast, gray indicates it is not in the correct position answer. <a href=\"https://github.com/elmsln/issues/issues/963\">Project</a></p>\n<h2 id=\"11ty-repo\" tabindex=\"-1\">11ty repo <a class=\"direct-link\" href=\"https://example.com/word-guess-game-doc/posts/wee1/#11ty-repo\" aria-hidden=\"true\">#</a></h2>\n<p>You can find the repository powering this 11ty website <a href=\"https://github.com/reyes-edwin/word-guess-game-doc\">here</a>.</p>\n<h2 id=\"notes-week-10\" tabindex=\"-1\">Notes Week 10 <a class=\"direct-link\" href=\"https://example.com/word-guess-game-doc/posts/wee1/#notes-week-10\" aria-hidden=\"true\">#</a></h2>\n<p><strong>Mockup</strong><br />\n<img src=\"https://raw.githubusercontent.com/jforcina20/word-guess-game-doc/master/img/wordle.jpg\" alt=\"wordle mockup\" /></p>\n<p>When a guess is entered, the results will be colored either grey, orange, or green using SimpleColor</p>\n<p>Our team currently believes that upon startup, the component will call the random word API to recieve the inital word. The user will start guessing and after entering a guess, each letter of their entry will be sent to an API endpoint noting which position it is in. The API response will state whether each letter is in the correct spot, in the incorrect spot, or not in the word at all.</p>\n<p><strong>Next Steps</strong><br />\nWe'll continue to refine our mockup and rough work to finalize what we want our project to look like. After that, each subset on the team (frontend, backend, API) will get started on developing a prototype for their respective elements.</p>\n",
      "date_published": "2022-03-19T00:00:00Z"
    }
  ]
}
